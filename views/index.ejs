<!DOCTYPE html>
<html>

<head>
  <title>
    <%= title%>
  </title>
  <script>
    (function (n, i, v, r, s, c, x, z) { x = window.AwsRumClient = { q: [], n: n, i: i, v: v, r: r, c: c }; window[n] = function (c, p) { x.q.push({ c: c, p: p }); }; z = document.createElement('script'); z.async = true; z.src = s; document.head.insertBefore(z, document.head.getElementsByTagName('script')[0]); })(
      'cwr',
      '0d6c7d54-c31a-45b6-be39-118455091554',
      '1.0.0',
      'us-east-1',
      'https://client.rum.us-east-1.amazonaws.com/1.16.1/cwr.js',
      {
        sessionSampleRate: 1,
        identityPoolId: "us-east-1:1f4aa60b-6415-41ce-bb6b-1bb2aac9e2b0",
        endpoint: "https://dataplane.rum.us-east-1.amazonaws.com",
        telemetries: ["performance", "http"],
        allowCookies: true,
        enableXRay: true
      }
    );
  </script>
</head>

<body>
  <h1>
    <%= title%>
  </h1>
  <p>Steven Rum Test</p>
  <a href="/second">Go To Second Page</a>
  <br>
  <label for="field">Text Field:</label>
  <input type="text" id="field" name="field">
  <button class="track_btn" id="page1_btn">Request Button </button>
  <button class="track_btn" id="page1_btn2">Also Tracked</button>
  <button id="page1_nottracked">Not tracked</button>
  <script>
    document.addEventListener('DOMContentLoaded', (event) => {
      const btn = document.getElementById("page1_btn");
      btn.addEventListener('click', function () {
        cwr("recordEvent", {
          type: 'first_page_Request_button',
          data: {
            current_url: "/request-button",
            user_interaction: {
              interaction_1: "click"
            }
          }
        });
      });

      const btn2 = document.getElementById("page1_btn2");
      btn2.addEventListener('click', function () {
        cwr("recordEvent", {
          type: 'first_page_button',
          data: {
            current_url: "/also-tracked",
            user_interaction: {
              interaction_1: "click"
            }
          }
        });
      });

      const clickButton = async (buttonId, times) => {
        for (let i = 0; i < times; i++) {
          document.getElementById(buttonId).click();
          await new Promise(resolve => setTimeout(resolve, 1000));
        }
      };

      const navigateAndClick = async () => {
        await clickButton('page1_btn', 5);
        await clickButton('page1_btn2', 2); 
        window.location.href = '/second';
      };

      navigateAndClick();
    });
  </script>
</body>
<script type="module" src="../instrumentation.js"></script>

</html>